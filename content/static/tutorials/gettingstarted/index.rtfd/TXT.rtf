{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;\red0\green0\blue233;
\red191\green81\blue5;\red26\green26\blue26;\red10\green82\blue135;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa321

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Getting Started\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trwWidth13120\trftsWidth3 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth13000\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sa240

\b0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 This tutorial is for Processing 2+. If you see any errors or have comments, please {\field{\*\fldinst{HYPERLINK "https://github.com/processing/processing-docs/issues?state=open"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\ul \ulc4 \outl0\strokewidth0 \strokec4 let us know}}. This tutorial was adapted from the book, {\field{\*\fldinst{HYPERLINK "http://www.processing.org/learning/books/#reasfry2"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\ul \ulc4 \outl0\strokewidth0 \strokec4 Getting Started with Processing}}, by Casey Reas and Ben Fry, O\'92Reilly / Make 2010. Copyright \'a9 2010 Casey Reas and Ben Fry. All rights reserved.\
\'a0\
Welcome to Processing!\
Start by visiting {\field{\*\fldinst{HYPERLINK "http://processing.org/download"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\ul \ulc4 \outl0\strokewidth0 \strokec4 http://processing.org/download}} and selecting the Mac, Windows, or Linux version, depending on what machine you have. Installation on each machine is straightforward:\
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 On Windows, you'll have a .zip file. Double-click it, and drag the folder inside to a location on your hard disk. It could be Program Files or simply the desktop, but the important thing is for the processing folder to be pulled out of that .zip file. Then double-click processing.exe to start.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The Mac OS X version is also a .zip file. Double-click it and drag the Processing icon to the Applications folder. If you're using someone else's machine and can't modify the Applications folder, just drag the application to the desktop. Then double-click the Processing icon to start.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The Linux version is a .tar.gz file, which should be familiar to most Linux users. Download the file to your home directory, then open a terminal window, and type:\uc0\u8232 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 tar xvfz processing-xxxx.tgz
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \uc0\u8232 (Replace xxxx with the rest of the file's name, which is the version number.) This will create a folder named processing-2.0 or something similar. Then change to that directory:\u8232 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 cd processing-xxxx
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \uc0\u8232 and run it:\u8232 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ./processing
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\intbl\itap1\pardeftab720\sa240
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 With any luck, the main Processing window will now be visible. Everyone's setup is different, so if the program didn't start, or you're otherwise stuck, visit the {\field{\*\fldinst{HYPERLINK "http://wiki.processing.org/w/Troubleshooting"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\ul \ulc4 \outl0\strokewidth0 \strokec4 troubleshooting page}} for possible solutions.\
\'a0\
\uc0\u8232 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The Processing Development Environment.
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  \
\'a0\
\pard\intbl\itap1\pardeftab720\sa280

\b\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Your First Program\
\pard\intbl\itap1\pardeftab720\sa240

\b0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 You're now running the Processing Development Environment (or PDE). There's not much to it; the large area is the Text Editor, and there's a row of buttons across the top; this is the toolbar. Below the editor is the Message Area, and below that is the Console. The Message Area is used for one line messages, and the Console is used for more technical details.\
In the editor, type the following:\
\
\pard\intbl\itap1\pardeftab720

\f1 \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 ellipse\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (50, 50, 80, 80);\
\pard\intbl\itap1\pardeftab720\sa240

\f0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
This line of code means "draw an ellipse, with the center 50 pixels over from the left and 50 pixels down from the top, with a width and height of 80 pixels." Click the Run button, which looks like this:\
\
If you've typed everything correctly, you'll see this appear in the Display Window:\
\
If you didn't type it correctly, the Message Area will turn red and complain about an error. If this happens, make sure that you've copied the example code exactly: the numbers should be contained within parentheses and have commas between each of them. While \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Python does not 
\i \expnd0\expndtw0\kerning0
require
\i0 \expnd0\expndtw0\kerning0
 semi-colons to terminate statements, semicolons 
\i \expnd0\expndtw0\kerning0
can
\i0 \expnd0\expndtw0\kerning0
 be used to delimit statements if you wish to put multiple statements on the same line.\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
One of the most difficult things about getting started with programming is that you have to be very specific about the syntax. The Processing software isn't always smart enough to know what you mean, and can be quite fussy about the placement of punctuation. You'll get used to it with a little practice.\
Next, we'll skip ahead to a sketch that's a little more exciting. Delete the text from the last example, and try this:\
\
\
\pard\intbl\itap1\pardeftab720

\f1 \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 void\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  
\f2\b \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 setup
\f1\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 () \{\
\'a0\'a0\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 size\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (480, 120);\
\}\
\
\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 void\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  
\f2\b \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 draw
\f1\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 () \{\
\'a0\'a0\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 if\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  (\cf7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 mousePressed\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ) \{\
\'a0\'a0\'a0\'a0\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 fill\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (0);\
\'a0\'a0\}\'a0\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 else\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  \{\
\'a0\'a0\'a0\'a0\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 fill\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (255);\
\'a0\'a0\}\
\'a0\'a0\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 ellipse\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (\cf7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 mouseX\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 , \cf7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 mouseY\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 , 80, 80);\
\}\
\pard\intbl\itap1\pardeftab720\sa240

\f0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
This program creates a window that is 480 pixels wide and 120 pixels high, and then starts drawing white circles at the position of the mouse. When a mouse button is pressed, the circle color changes to black. We'll explain more about the elements of this program in detail later. For now, run the code, move the mouse, and click to experience it.\
\pard\intbl\itap1\pardeftab720\sa280

\b\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Show\
\pard\intbl\itap1\pardeftab720\sa240

\b0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 So far we've covered only the Run button, though you've probably guessed what the Stop button next to it does:\
\
If you don't want to use the buttons, you can always use the Sketch menu, which reveals the shortcut Ctrl-R (or Cmd-R on the Mac) for Run. Below Run in the Sketch menu is Present, which clears the rest of the screen to present your sketch all by itself:\
 \
You can also use Present from the toolbar by holding down the Shift key as you click the Run button.\
\pard\intbl\itap1\pardeftab720\sa280

\b\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Save\
\pard\intbl\itap1\pardeftab720\sa240

\b0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The next command that's important is Save. It's the downward arrow on the toolbar:\
\
You can also find it under the File menu. By default, your programs are saved to the "sketchbook," which is a folder that collects your programs for easy access. Clicking the Open button on the toolbar (the arrow pointing up) will bring up a list of all the sketches in your sketchbook, as well as a list of examples that are installed with the Processing software:\
\
It's always a good idea to save your sketches often. As you try different things, keep saving with different names, so that you can always go back to an earlier version. This is especially helpful if \'97 no, when \'97 something breaks. You can also see where the sketch is located on the disk with Show Sketch Folder under the Sketch menu.\
You can also create a new sketch by pressing the New button on the toolbar:\
\
\pard\intbl\itap1\pardeftab720\sa280

\b\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Share\
\pard\intbl\itap1\pardeftab720\sa240

\b0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Another theme of Processing is sharing your work. The Export Application button on the toolbar:\
\
will bundle your code into an application for your choice of Mac, Windows, or Linux depending on which platform you are using. This is an easy way to make self-contained, double-clickable versions of your projects. \
You can also find Export Application under the File menu.\
In addition to exporting your code as applications, you can switch to a different 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 mode
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  within Processing to export to other platforms. For example, download and change to JavaScript Mode to export HTML5 Canvas and WebGL. Change to {\field{\*\fldinst{HYPERLINK "http://processing.org/learning/android/"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\ul \ulc4 \outl0\strokewidth0 \strokec4 Android}} mode to export application for Android phones and tablets. These modes both need to be added before they can be used. Select "Add Mode..." from the menu that says "Java" in the upper-right corner of the Processing Development Environment. \
\pard\intbl\itap1\pardeftab720\sa280

\b\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Examples and Reference\
\pard\intbl\itap1\pardeftab720\sa240

\b0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Learning how to program with Processing involves exploring lots of code: running, altering, breaking, and enhancing it until you have reshaped it into something new. With this in mind, the Processing software download includes dozens of examples that demonstrate different features of the software. To open an example, select Examples from the File menu or click the Open icon in the PDE. The examples are grouped into categories based on their function, such as Form, Motion, and Image. Find an interesting topic in the list and try an example.\
If you see a part of the program you're unfamiliar with that is colored orange (this means it's a part of Processing), select its name, and then click on "Find in Reference" from the Help menu. You can also right-click the text (or Ctrl-click on a Mac) and choose Find in Reference from the menu that appears. This will open the reference for the selected code element in your web browser. {\field{\*\fldinst{HYPERLINK "http://www.processing.org/reference/"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\ul \ulc4 \outl0\strokewidth0 \strokec4 The reference is also available online}}.\
The Processing Reference explains every code element with a description and examples. The reference programs are much shorter (usually four or five lines) and easier to follow than the longer code found in the Examples folder. We recommend keeping the reference open while you're reading this book and while you're programming. It can be navigated by topic or alphabetically; sometimes it's fastest to do a text search within your browser window.\
The reference was written with the beginner in mind; we hope that we've made it clear and understandable. We're grateful to the many people who've spotted errors over the years and reported them. If you think you can improve a reference entry or you find a mistake, please let us know by clicking on the link at the top of each reference page.\
\'a0\
This tutorial is for Processing 2+. If you see any errors or have comments, please {\field{\*\fldinst{HYPERLINK "https://github.com/processing/processing-docs/issues?state=open"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\ul \ulc4 \outl0\strokewidth0 \strokec4 let us know}}. This tutorial was adapted from the book, {\field{\*\fldinst{HYPERLINK "http://www.processing.org/learning/books/#reasfry2"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\ul \ulc4 \outl0\strokewidth0 \strokec4 Getting Started with Processing}}, by Casey Reas and Ben Fry, O\'92Reilly / Make 2010. Copyright \'a9 2010 Casey Reas and Ben Fry. All rights reserved.\cell \lastrow\row
}